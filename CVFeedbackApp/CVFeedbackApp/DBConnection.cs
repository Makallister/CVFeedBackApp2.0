using System;
using System.Collections.Generic;
using System.Data;
using System.Data.SqlClient;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace CVFeedbackApp
{
    class DBConnection
    {

        //attributes
        private static DBConnection _instance;

        private static string connectionStr;

        //the SqlConnection object used to store the connection to the database 
        private System.Data.SqlClient.SqlConnection connectionToDB;

        // the DataAdapter object used to open a table of the database
        private System.Data.SqlClient.SqlDataAdapter dataAdapter;



        //properties
        public static string ConnectionStr
        {
            set { connectionStr = value; }
        }


        ///
        ///methods
        ///
        //return the database connection
        public static DBConnection getDatabaseConection()
        {
            if (_instance == null)
                _instance = new DBConnection();
            return _instance;
        }

        // Open the connection
        public void openConnection()
        {
            // create the connection to the database as an instance of System.Data.SqlClient.SqlConnection
            connectionToDB = new System.Data.SqlClient.SqlConnection(connectionStr);

            //open the connection
            connectionToDB.Open();
        }


        public void closeConnection()
        {
            //close the connection to the database
            connectionToDB.Close();

        }

        // Get the data set generated by the sqlStatement
        public System.Data.DataSet getDataSet(string sqlStatement)
        {
            openConnection();

            System.Data.DataSet dataSet;

            // create the object dataAdapter to manipulate a table from the database StudentDissertations specified by connectionToDB
            dataAdapter = new System.Data.SqlClient.SqlDataAdapter(sqlStatement, connectionToDB);

            // create the dataset
            dataSet = new System.Data.DataSet();

            dataAdapter.Fill(dataSet);

            closeConnection();

            //return the dataSet
            return dataSet;
        }



        //insert strings into db

        //sql for putting data into GenericTemplate table
        public void insertToDB(string DBQuery, GenericTemplate GTInstance)
        {

            

            SqlCommand command = new SqlCommand();
            command.CommandType = CommandType.Text;
            command.CommandText = DBQuery;


            //Declares variables and sets values from GTInstance
            string GTtitle = GTInstance.GetTitle();
            string GTheader = GTInstance.GetHeader();
            string GTfooter = GTInstance.GetFooter();
            List<OptionSet> optionSetListInstance = GTInstance.GetOptionSetList();
            
            //#needs method to retrive primary key from GenericTemplate in order to store it in all OptionSets

            //Instert values from GTInstance to DB, table GenericTemplate
            DBQuery = "INSERT INTO GenericTemplate (title, header, footer,)" +
               "Values('" + GTtitle + "', '" + GTheader + "', '" + GTfooter + "')";


            for (int i = 0; i <= optionSetListInstance.Count; i++)
            {
                //Sets the title value of each optionSet to DB
                string OSTitle = optionSetListInstance[i].GetOptionSetTitle();
                DBQuery = "INSERT INTO OptionSet (title)" + "Values('" + OSTitle + "')";

                //##needs method to retrive primary key for each OptionSet in order to store it in each Option for each OptionSet

                //Gets the list of options for each optionset
                List<Option> optionListInstance = optionSetListInstance[i].GetOptionsList();

                for (int j = 0; j <= optionListInstance.Count; j++)
                {
                    string OTitle = optionListInstance[j].GetTitle();
                    string OMessage = optionListInstance[j].GetMessage();
                    DBQuery = "INSERT INTO Option (title, message)" + "Values('" + OTitle + "', '" + OMessage + "')";
                }   
            }

            openConnection();
            command.Connection = connectionToDB;

            int n = command.ExecuteNonQuery();

            closeConnection();

            Console.WriteLine("n-" + n);
        }

        //sql for putting data into Option table
        //public void insertToOption(string optQuery, String title, String message)
        //{
        //    SqlCommand command = new SqlCommand();
        //    command.CommandType = CommandType.Text;
        //    command.CommandText = optQuery;

        //    optQuery = "INSERT INTO GenericTemplate (title, message,)" +
        //       "Values('" + title + "', '" + message + "')";

        //    openConnection();
        //    command.Connection = connectionToDB;

        //    int n = command.ExecuteNonQuery();

        //    closeConnection();

        //    Console.WriteLine("n-" + n);
        //}

        ////sql for putting data into OptionSet table
        //public void insertToOptionSet(string optSetQuery, String title)
        //{
        //    SqlCommand command = new SqlCommand();
        //    command.CommandType = CommandType.Text;
        //    command.CommandText = optSetQuery;
            
        //    optSetQuery = "INSERT INTO GenericTemplate (title)" +
        //       "Values('" + title + "')";

        //    openConnection();
        //    command.Connection = connectionToDB;

        //    int n = command.ExecuteNonQuery();

        //    closeConnection();

        //    Console.WriteLine("n-" + n);
        //}
    }
}
