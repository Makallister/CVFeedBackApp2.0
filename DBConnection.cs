using System;
using System.Collections.Generic;
using System.Data;
using System.Data.SqlClient;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace CVFeedbackApp
{
    class DBConnection
    {

        //attributes
        private static DBConnection _instance;

        private static string connectionStr;

        //the SqlConnection object used to store the connection to the database 
        private System.Data.SqlClient.SqlConnection connectionToDB;

        // the DataAdapter object used to open a table of the database
        private System.Data.SqlClient.SqlDataAdapter dataAdapter;



        //properties
        public static string ConnectionStr
        {
            set { connectionStr = value; }
        }


        ///
        ///methods
        ///
        //return the database connection
        public static DBConnection getDatabaseConection()
        {
            if (_instance == null)
                _instance = new DBConnection();
            return _instance;
        }

        // Open the connection
        public void openConnection()
        {
            // create the connection to the database as an instance of System.Data.SqlClient.SqlConnection

            

            connectionToDB = new System.Data.SqlClient.SqlConnection(connectionStr);

            //open the connection
            connectionToDB.Open();
        }


        public void closeConnection()
        {
            //close the connection to the database
            connectionToDB.Close();

        }

        // Get the data set generated by the sqlStatement
        public System.Data.DataSet getDataSet(string sqlStatement)
        {
            openConnection();

            System.Data.DataSet dataSet;

            // create the object dataAdapter to manipulate a table from the database StudentDissertations specified by connectionToDB
            dataAdapter = new System.Data.SqlClient.SqlDataAdapter(sqlStatement, connectionToDB);

            // create the dataset
            dataSet = new System.Data.DataSet();

            dataAdapter.Fill(dataSet);

            closeConnection();

            //return the dataSet
            return dataSet;
        }



        //insert strings into db

        //sql for putting data into GenericTemplate table
        public void insertToDB()
        {

            SqlCommand command = new SqlCommand();
            command.CommandType = CommandType.Text;
            openConnection();
            command.Connection = connectionToDB;

            //Initialises DBQuery and gets instance of Generic Template
            string DBQuery;
            GenericTemplate GTInstance = GenericTemplate.GetGenericTemplate();

            //Declares variables and sets values from GTInstance
            string GTtitle = GTInstance.GetTitle();
            string GTheader = GTInstance.GetHeader();
            string GTfooter = GTInstance.GetFooter();
            List<OptionSet> optionSetListInstance = GTInstance.GetOptionSetList();
            

            //Instert values from GTInstance to DB, table GenericTemplate
            DBQuery = "INSERT INTO GenericTemplate (title, header, footer)" +
               "Values('" + GTtitle + "', '" + GTheader + "', '" + GTfooter + "')";
            command.CommandText = DBQuery;

            //int n is used to see if changes are aplied
            int n = command.ExecuteNonQuery();

            //Query to get genTempID from Database
            DBQuery = "SELECT genTempID FROM GenericTemplate WHERE title= '" + GTtitle +"'";
            command.CommandText = DBQuery;

            //Executes sql query returns Primary key for the title that has been just inserted
            int GTPrimaryKey = Convert.ToInt32(command.ExecuteScalar());
            
             
            for (int i = 0; i < optionSetListInstance.Count; i++)
            {
                //Sets the title value of each optionSet to DB
                string OSTitle = optionSetListInstance[i].GetOptionSetTitle();
                DBQuery = "INSERT INTO OptionSet (title, genTempID)" + "Values('" + OSTitle + "',  '" + GTPrimaryKey + "')";
                command.CommandText = DBQuery;
                n = command.ExecuteNonQuery();
                Console.WriteLine("n-" + n);

                //Query to get optionSetID from Database
                DBQuery = "SELECT optionSetID FROM OptionSet WHERE title= '" + OSTitle + "'";
                command.CommandText = DBQuery;

                //Executes sql query returns Primary key for the title that has been just inserted
                int OSTPrimaryKey = Convert.ToInt32(command.ExecuteScalar());


                //Gets the list of options for each optionset
                List<Option> optionListInstance = optionSetListInstance[i].GetOptionsList();

                for (int j = 0; j < optionListInstance.Count; j++)
                {
                    string OTitle = optionListInstance[j].GetTitle();
                    string OMessage = optionListInstance[j].GetMessage();
                    DBQuery = "INSERT INTO Option (title, message, OptionSetID )" + "Values('" + OTitle + "', '" + OMessage + "','" + OSTPrimaryKey + "')";

                    command.CommandText = DBQuery;
                    n = command.ExecuteNonQuery();
                   
                    Console.WriteLine("n-" + n);

                }
            }

            closeConnection();

            Console.WriteLine("n-" + n);
        }

        //insert strings into db

        //sql for putting data into GenericTemplate table
        public void dBEdit()
        {

            SqlCommand command = new SqlCommand();
            command.CommandType = CommandType.Text;
            openConnection();
            command.Connection = connectionToDB;

            //Initialises DBQuery and gets instance of Generic Template
            string DBQuery;
            templateEdit STInstance = templateEdit.GetTemplate();

            //Declares variables and sets values from GTInstance
            string STtitle = STInstance.GetTitle();
            string STheader = STInstance.GetHeader();
            string STfooter = STInstance.GetFooter();
            string STID = STInstance.GetID();

            //Delete the pre-existing information from the Database
            DBQuery = "DELETE FROM GenericTemplate WHERE genTempID = '"+ STID +"'"; 

            //Instert values to table GenericTemplate
            DBQuery = "INSERT INTO GenericTemplate (genTempID, title, header, footer)" +
               "Values('"+ STID + "', '" + STtitle + "', '" + STheader + "', '" + STfooter + "')";
            command.CommandText = DBQuery;

            //int n is used to see if changes are aplied
            int n = command.ExecuteNonQuery();

            //Executes sql query returns Primary key for the title that has been just inserted
            int GTPrimaryKey = Convert.ToInt32(command.ExecuteScalar());
            
            closeConnection();
            
        }

        //Returns all titles of Generic templates in a list and the number of members
        public List<string> LoadAllGTTiles()
        {
            //Creates new List
            List<string> allTheTitles = new List<string>();

            //Opens Connection and initializes command
            SqlCommand command = new SqlCommand();
            command.CommandType = CommandType.Text;
            openConnection();
            command.Connection = connectionToDB;
            string DBQuery;


            //Gets the number of members and stores it into int variable
            DBQuery = "SELECT COUNT(title) FROM GenericTemplate";
            command.CommandText = DBQuery;
            int numberOfGT = Convert.ToInt32(command.ExecuteScalar());
            Console.WriteLine("n-" + numberOfGT);

            for (int i = 1; i <= numberOfGT; i++ )
            {
                //Gets member from database based on primary key
                DBQuery = "SELECT title FROM GenericTemplate WHERE genTempID= '" + i + "'";
                command.CommandText = DBQuery;
                string gotTitle = Convert.ToString(command.ExecuteScalar());

                //Adds member to list
                allTheTitles.Add(gotTitle);
            }
            closeConnection();

            //returns list containing all the titles stored in atabase
            return allTheTitles;


        }
        public void LoadGenericTemplate (string gotGTTitle)
        {
            GenericTemplate loadedTemplate = GenericTemplate.GetGenericTemplate();

            //Opens Connection and initializes command
            SqlCommand command = new SqlCommand();
            command.CommandType = CommandType.Text;
            openConnection();
            command.Connection = connectionToDB;
            string DBQuery;

            //Gets Primary key based on the title
            DBQuery = "Select genTempID FROM GenericTemplate WHERE title = '" + gotGTTitle + "'";
            command.CommandText = DBQuery;
            int loadedGTPK = Convert.ToInt32(command.ExecuteScalar());

            //Gets Header and Footer from Selected GT and loads it into instance
            DBQuery = "Select header FROM GenericTemplate WHERE genTempID = '" + loadedGTPK+ "'";
            command.CommandText = DBQuery;
            loadedTemplate.SetHeader(Convert.ToString(command.ExecuteScalar()));

            DBQuery = "Select footer FROM GenericTemplate WHERE genTempID = '" + loadedGTPK + "'";
            command.CommandText = DBQuery;
            loadedTemplate.SetFooter(Convert.ToString(command.ExecuteScalar()));

            //Gets count from OptionSets
            DBQuery = "SELECT COUNT(genTempID) FROM OptionSet WHERE genTempID = '" + loadedGTPK + "'";
            command.CommandText = DBQuery;
            int numberOfOptionSets = Convert.ToInt32(command.ExecuteScalar());
            //Gets list Of OptionsSets
            for (int i = 1; i <= numberOfOptionSets; i++)
            {
                DBQuery ="SELECT title FROM OptionSet WHERE OptionSetID = '" + i +"'";
                command.CommandText = DBQuery;

                //Gets PK from OptionSet
                loadedTemplate.GetOptionSetList()[i].SetOptionSetTitle(Convert.ToString(command.ExecuteScalar()));
                DBQuery = "SELECT COUNT(OptionSetID FROM OptionSet WHERE OptionSetID = '" + i + "'";
                command.CommandText = DBQuery;
                int optionSet = Convert.ToInt32(command.ExecuteScalar());

                //for (int j = 1; j <= optionSetID; j++)
                //{
                //    DBQuery = "SELECT ";
                //}
            }

        


        }

    }
}
